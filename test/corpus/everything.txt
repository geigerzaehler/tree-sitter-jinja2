================================================================================
Outputs
================================================================================
Hello {{ world }}!
{{ }}
{{}}
{{ } }}
--------------------------------------------------------------------------------

(template
  (text)
  (output
    (expression))
  (text)
  (output)
  (output)
  (output
    (expression)))

================================================================================
Comments
================================================================================
Hello {# a # } #}
world {#a
  inner } #
f#}!
--------------------------------------------------------------------------------

(template
  (text)
  (comment)
  (text)
  (comment)
  (text))

================================================================================
Whitespace control
================================================================================
{% foo + -%}
{% foo - +%}
{%- foo - %}
{%- foo - -%}
{%- foo - +%}
{%+ foo - %}
{%+ foo - -%}
{%+ foo - +%}

{%- if True -%}
{%- elif - +%}
{%- else +%}
{%- endif -%}
--------------------------------------------------------------------------------

(template
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag))
  (if_statement
    (expression)
    (elif_statement
      (expression))
    (else_statement)))

================================================================================
for statement
================================================================================
{% for x in y %}
{% endfor %}
{% for x in y %}
foo
{% else %}
bar
{% endfor %}
--------------------------------------------------------------------------------

(template
  (for_statement
    iteration: (expression))
  (for_statement
    iteration: (expression)
    body: (text)
    (for_else_statement
      body: (text))))

================================================================================
include statement
================================================================================
{% include "sidebar.html" with context %}
{% include "sidebar.html" without context %}
{% include "sidebar.html" ignore missing %}
{% include "sidebar.html" ignore missing with context %}
{% include "sidebar.html" ignore missing without context %}
--------------------------------------------------------------------------------

(template
  (include_statement
    (string))
  (include_statement
    (string))
  (include_statement
    (string))
  (include_statement
    (string))
  (include_statement
    (string)))

================================================================================
macro statement
================================================================================
{% macro input(name, value='', type='text') -%}
body
{%- endmacro %}

{%- macro textarea(name, value='', rows=10, cols=40) -%}{%- endmacro %}
--------------------------------------------------------------------------------

(template
  (macro_statement
    signature: (expression)
    (text))
  (macro_statement
    signature: (expression)))

================================================================================
call statement
================================================================================
{% call render_dialog('Hello World') %}
c
{% endcall %}
--------------------------------------------------------------------------------

(template
  (call_statement
    call: (expression)
    (text)))

================================================================================
filter statement
================================================================================
{% filter foo %}
{% endfilter %}
--------------------------------------------------------------------------------

(template
  (filter_statement
    (expression)))

================================================================================
assignment statement
================================================================================
{% set foo %}
{% set bar %}
{% endset %}
--------------------------------------------------------------------------------

(template
  (assignment_statement
    (expression))
  (assignment_statement
    (expression))
  (end_assignment_statement))

================================================================================
extends statement
================================================================================
{% extends "base.html" %}
--------------------------------------------------------------------------------

(template
  (extends_statement
    (expression)))

================================================================================
block statement
================================================================================
{% block abc %}
  body
{% endblock %}
{% block abc %}{% endblock abc %}
{% block body scoped %}{% endblock %}
{% block body required %}{% endblock %}
{% block body scoped required %}{% endblock %}
--------------------------------------------------------------------------------

(template
  (block_statement
    (identifier)
    (text))
  (block_statement
    (identifier)
    (identifier))
  (block_statement
    (identifier))
  (block_statement
    (identifier))
  (block_statement
    (identifier)))

================================================================================
import statement
================================================================================
{% import 'forms.html' as forms %}
{% import 'forms.html' as forms with context %}
{% import 'forms.html' as forms without context %}
{% from 'forms.html' import input with context %}
{% from 'forms.html' import input without context %}
{% from 'forms.html' import input as input_field, textarea %}
--------------------------------------------------------------------------------

(template
  (import_statement
    (string)
    (identifier))
  (import_statement
    (string)
    (identifier))
  (import_statement
    (string)
    (identifier))
  (import_statement
    (string)
    (identifier))
  (import_statement
    (string)
    (identifier))
  (import_statement
    (string)
    (identifier)
    (identifier)
    (identifier)))

================================================================================
with statement
================================================================================
{% with %}
asdfj
{% endwith %}

{% with foo = 42 %}
{% endwith %}
--------------------------------------------------------------------------------

(template
  (with_statement
    (text))
  (with_statement
    assignment: (expression)))

================================================================================
raw statement
================================================================================
{% raw %}
{% if foo %}
{% custom %}
{{ ouptut }}
{% endraw %}
--------------------------------------------------------------------------------

(template
  (raw_statement
    (text)))

================================================================================
custom tag statement
================================================================================
{% custom_tag %}
{% custom_tag_fn("sldkfj") %}
--------------------------------------------------------------------------------

(template
  (custom_statement
    (custom_tag))
  (custom_statement
    (custom_tag)))

================================================================================
nest deep
================================================================================
{% if foo %}
{% for foo %}
{% macro signature %}
{% with %}
{% call foo %}
{% block foo %}
{% custom_tag %}
{% endblock %}
{% endcall %}
{% custom_tag %}
{% endwith %}
{% custom_tag %}
{% endmacro %}
{% custom_tag %}
{% endfor %}
{% custom_tag %}
{% endif %}
--------------------------------------------------------------------------------

(template
  (if_statement
    condition: (expression)
    body: (for_statement
      iteration: (expression)
      body: (macro_statement
        signature: (expression)
        (with_statement
          (call_statement
            call: (expression)
            (block_statement
              id: (identifier)
              (custom_statement
                (custom_tag))))
          (custom_statement
            (custom_tag)))
        (custom_statement
          (custom_tag)))
      body: (custom_statement
        (custom_tag)))
    body: (custom_statement
      (custom_tag))))
